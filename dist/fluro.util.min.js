angular.module("fluro.util",["fluro.config"]),app.filter("formatDate",function(){return function(dateString,format){return new Date(dateString).format(format)}}),angular.module("fluro.util").service("CacheManager",function($resource,$cacheFactory){var controller={},_caches=[];return controller.get=function(type){var cache=$cacheFactory.get(type+"-list");return cache||(cache=$cacheFactory(type+"-list"),_caches.push(cache)),cache},controller.clear=function(type){console.log("Clear",type,"cache");var cache=$cacheFactory.get(type+"-list");cache&&cache.removeAll()},controller.clearAll=function(){console.log("Clear all caches"),_.each(_caches,function(cache){console.log("Clearing cache",cache),cache.removeAll()})},controller}),angular.module("fluro.util").filter("formatDate",function(){return function(dateString,format){return new Date(dateString).format(format)}}).factory("DateTools",function(){var controller={};return controller.readableDateRange=function(startDate,endDate){_.isDate(startDate)||(startDate=new Date(startDate)),_.isDate(endDate)||(endDate=new Date(endDate));var today=new Date,string="";return startDate.format("d/m/y")!=endDate.format("d/m/y")?(string=startDate.format("M Y")==endDate.format("M Y")?startDate.format("l j")+" - "+endDate.format("l j F"):startDate.format("l j F")+" until "+endDate.format("l j F"),today.format("Y")!=endDate.format("Y")&&(string=string+" "+endDate.format("Y"))):startDate&&(string=startDate.format("l j F"),today.format("Y")!=startDate.format("Y")&&(string=string+" "+startDate.format("Y"))),string},controller}),angular.module("fluro.util").service("Asset",function(Fluro,$window){var controller={};return controller.getUrl=function(id){return Fluro.apiURL+"/get/"+id},controller.thumbnailUrl=function(id){return Fluro.apiURL+"/get/"+id+"?w=50"},controller.imageUrl=function(_id,w,h){var url=Fluro.apiURL+"/get/"+_id+"?dimensions",limitWidth=1200;return $window.screen.width<=768&&(limitWidth=768),$window.screen.width<=320&&(limitWidth=320),w||h?(w&&(url+="&w="+w),h&&(url+="&h="+h)):url+="&w="+limitWidth,Fluro.token&&(url+="&access_token="+Fluro.token),url},controller.downloadUrl=function(id){var url=Fluro.apiURL+"/download/"+id;return Fluro.token&&(url+="&access_token="+Fluro.token),url},controller.isAssetType=function(object){switch(object._type){case"asset":case"video":case"audio":case"image":return!0;default:return!1}},controller}),angular.module("fluro.util").factory("Playlist",function(){function Playlist(){var _this=this,_items=[],_index=0,_loop=!0,_direction="forwards";return this.__defineSetter__("index",function(i){_direction=_index>i?"backwards":"forwards",i!=_index&&(_index=i)}),this.__defineGetter__("index",function(){return _index}),this.__defineGetter__("direction",function(){return _direction}),this.__defineGetter__("currentItem",function(){return _items[_index]}),this.__defineGetter__("length",function(){return _items.length}),this.indexOf=function(object){return _items.indexOf(object)},this.select=function(object){var i=_items.indexOf(object);-1!=i&&(_this.index=i)},this.__defineGetter__("items",function(){return _items}),this.__defineSetter__("items",function(array){_items=array,_index=0}),this.__defineGetter__("previousEnabled",function(){return _loop?!0:_index>0}),this.__defineGetter__("nextEnabled",function(){return _loop?!0:_index<_items.length-1}),this.__defineGetter__("loop",function(){return _loop}),this.__defineSetter__("loop",function(bol){_loop=bol}),this.next=function(){_index<_items.length-1?_this.index=_index+1:_loop&&(_this.index=0)},this.previous=function(){_index>0?_this.index=_index-1:_loop&&(_this.index=_items.length-1)},this.addItem=function(item){return _items.push(item),item},this.addItemAt=function(item,pos){return _items.splice(pos,0,item),item},this.removeItem=function(item){var _itemIndex=_items.indexOf(item),_result=_items[_itemIndex];return-1!=_itemIndex&&_items.splice(_itemIndex,1),_result},this.clear=function(){_items=new Array,_index=0},_this}return Playlist}),angular.module("fluro.util").provider("TypeConfig",function(){var controller={types:[]};return controller.types.push({singular:"Role",plural:"Roles",path:"role",columns:[{title:"Applications",key:"applicationKeys"}]}),controller.types.push({singular:"Code",plural:"Code",path:"code",columns:[{title:"Syntax",key:"syntax"}],filters:[{title:"Syntax",key:"syntax"}]}),controller.types.push({singular:"Component",plural:"Components",path:"component"}),controller.types.push({singular:"Query",plural:"Queries",path:"query"}),controller.types.push({singular:"Package",plural:"Packages",path:"package"}),controller.types.push({singular:"Contact",plural:"Contacts",path:"contact",columns:[{title:"First Name",key:"firstName"},{title:"Last Name",key:"lastName"},{title:"Gender",key:"gender"}],filters:[{title:"Gender",key:"gender"}]}),controller.types.push({singular:"Purchase",plural:"Purchases",path:"purchase",columns:[{title:"Customer",key:"owner.name"},{title:"Amount",key:"transaction.amount"},{title:"Transaction",key:"transaction._id"}]}),controller.types.push({singular:"Product",plural:"Products",path:"product",columns:[{title:"Amount",key:"amount"},{title:"License",key:"license"}],filters:[{title:"License",key:"license"}]}),controller.types.push({singular:"Transaction",plural:"Transactions",path:"transaction",columns:[{title:"Amount",key:"amount"},{title:"Payment",key:"paymentStatus"},{title:"Mode",key:"mode"}],filters:[{title:"Payment Status",key:"paymentStatus"},{title:"Mode",key:"mode"}]}),controller.types.push({singular:"Application",plural:"Applications",path:"application",columns:[{title:"Type",key:"applicationType"},{title:"Realms",key:"realms",renderer:"multi"},{title:"Domain",key:"domain"}]}),controller.types.push({singular:"Integration",plural:"Integrations",path:"integration",columns:[{title:"Module",key:"module"}],filters:[{title:"Module",key:"module"}]}),controller.types.push({singular:"Interaction",plural:"Interactions",path:"interaction",columns:[{title:"First Name",key:"contact.firstName"},{title:"Last Name",key:"contact.lastName"}]}),controller.types.push({singular:"Definition",plural:"Definitions",path:"definition",columns:[{title:"Type",key:"parentType"},{title:"Realms",key:"realms",renderer:"multi"}],filters:[{title:"Basic Type",key:"parentType"}]}),controller.types.push({singular:"Realm",plural:"Realms",path:"realm"}),controller.types.push({singular:"User",plural:"Users",path:"user",columns:[{title:"Roles",key:"permissionSets",renderer:"permissionSet"},{title:"Realm",key:"realms"},{title:"Status",key:"status"}]}),controller.types.push({singular:"Event",plural:"Events",path:"event",filters:[{title:"Locations",key:"locations"},{title:"Rooms",key:"rooms"}],viewModes:["calendar","cards"]}),controller.types.push({singular:"Location",plural:"Locations",path:"location",columns:[{title:"Address",key:"addressLine1"},{title:"Suburb",key:"suburb"},{title:"State",key:"state"},{title:"Country",key:"country"}],filters:[{title:"State",key:"state"},{title:"Country",key:"country"}],viewModes:["map"]}),controller.types.push({singular:"Endpoint",plural:"Endpoints",path:"endpoint"}),controller.types.push({singular:"Account",plural:"Accounts",path:"account"}),controller.types.push({singular:"Collection",plural:"Collections",path:"collection",columns:[{title:"Items",key:"items.length"}]}),controller.types.push({singular:"Article",plural:"Articles",path:"article",columns:[{title:"Author",key:"author.name"},{title:"Tags",key:"tags",renderer:"multi"},{title:"Realms",key:"realms",renderer:"multi"}]}),controller.types.push({singular:"Asset",plural:"Assets",path:"asset",columns:[{title:"File Type",key:"extension"},{title:"Tags",key:"tags",renderer:"multi"},{title:"Realms",key:"realms",renderer:"multi"}],filters:[{title:"File Type",key:"extension"}]}),controller.types.push({singular:"Tag",plural:"Tags",path:"tag",filters:[{title:"Type",key:"restrictType"}]}),controller.types.push({singular:"Image",plural:"Images",path:"image",columns:[{title:"Tags",key:"tags",renderer:"multi"},{title:"Realms",key:"realms",renderer:"multi"}],filters:[{title:"Asset Type",key:"assetType"}],viewModes:["grid"]}),controller.types.push({singular:"Audio",plural:"Audio",path:"audio",columns:[{title:"File Type",key:"extension"},{title:"Realms",key:"realms",renderer:"multi"}],filters:[{title:"File Type",key:"extension"},{title:"Asset Type",key:"assetType"}]}),controller.types.push({singular:"Video",plural:"Videos",path:"video",columns:[{title:"File Type",key:"extension"}],filter:[{title:"Asset Type",key:"assetType"}],viewModes:["grid"]}),controller.types.push({singular:"Site",plural:"Sites",path:"site",columns:[{title:"Realms",key:"realms",renderer:"multi"}]}),{$get:function(){return controller}}}).service("TypeService",function($q,Fluro,FluroContent,FluroAccess,TypeConfig){var controller={};return controller.types=TypeConfig.types,controller.allTypes=function(){return[].concat(controller.types,controller.definedTypes)},controller.getTypeFromPath=function(path){var primitive=_.find(TypeConfig.types,{path:path});if(primitive)return primitive;var defined=_.find(controller.definedTypes,{definitionName:path});return defined?{singular:defined.title,plural:defined.plural,path:defined.definitionName,parentType:defined.parentType}:void 0},controller.isBasicType=function(typeName){return _.some(controller.types,function(type){return type.path==typeName})},controller.sideLoadDefinition=function(definition){controller.definedTypes&&(console.log("Side loaded",definition),controller.definedTypes.push(definition),controller.refreshMenuTree())},controller.refreshDefinedTypes=function(){return console.log("Refresh defined types"),controller.definedTypes=FluroContent.endpoint("defined",!0,!0).query(),controller.definedTypes.$promise.then(function(){controller.refreshMenuTree()}),controller.definedTypes},controller.requiredBasicTypes=function(){return _.map(controller.definedTypes,function(def){return def.parentType})},controller.refreshMenuTree=function(){var grouped=_.groupBy(controller.definedTypes,function(defined){return defined.parentType});controller.menuTree=_.chain(controller.types).map(function(type){var children=grouped[type.path],canAccess=FluroAccess.canAccess(type.path);return canAccess&&children&&children.unshift(type),type.children=children,canAccess||children&&children.length?type:null}).compact().value()},controller.getIcon=function(type){return type.parentType?type.parentType:type.path},controller.getAllCreateableTypes=function(){var primitives=_.chain(controller.types).filter(function(type){return FluroAccess.can("create",type.path)}).map(function(type){return type.icon=type.path,type}).value(),defined=_.chain(controller.definedTypes).filter(function(type){return FluroAccess.can("create",type.definitionName)}).each(function(type){type.singular=type.title,type.path=type.definitionName,type.icon=type.parentType}).value();return primitives.concat(defined)},controller}),angular.module("fluro.util").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("fluro/ui/columns.html",'<div class=columns><div class="outer cf"><div class=wrapper><div class=column-{{columnWidth}} ng-repeat="item in model"><render ng-model=item></render></div></div></div></div>'),$templateCache.put("fluro/ui/countdown.html",""),$templateCache.put("fluro/ui/gallery.html",'<div class=gallery><div class=outer><div class=wrapper><div class=slideshow ng-swipe-right=previous() ng-swipe-left=next()><div class=slideshow-contents><div class="gallery-slide slide animated" ng-class={active:isActive(image)} ng-repeat="image in model"><img fluro-image=image._id alt={{image.title}} image-height="1200"></div></div><div class=slideshow-controls ng-if="playlist.length > 1"><div class=slideshow-controls-wrapper><a class="slideshow-control slideshow-previous" ng-click=previous()><i class="fa fa-chevron-left"></i></a> <a class="slideshow-control slideshow-next" ng-click=next()><i class="fa fa-chevron-right"></i></a></div></div><div class=slideshow-nav ng-if="playlist.length > 1"><a ng-click=select(item) ng-repeat="item in playlist.items" ng-class={active:isActive(item)}><i class=fa ng-class="{\'fa-circle-o\':!isActive(item), \'fa-circle\':isActive(item)}"></i></a></div></div><div class=gallery-thumbs><slider><div class=gallery-thumb ng-class={active:isActive(image)} ng-click=playlist.select(image) ng-repeat="image in model"><img fluro-image=image._id alt={{image.title}} image-width=320 image-height="320"></div></slider></div></div></div></div>'),$templateCache.put("fluro/ui/slide.html",'<div class="slide animated" ng-class="{\'active\':active}" ng-transclude></div>'),$templateCache.put("fluro/ui/slideshow.html",'<div class=slideshow ng-swipe-right=previous() ng-swipe-left=next()><div class=slideshow-contents ng-transclude></div><div class=slideshow-controls ng-if="playlist.length > 1"><div class=slideshow-controls-wrapper><a class="slideshow-control slideshow-previous" ng-click=previous()><i class="fa fa-chevron-left"></i></a> <a class="slideshow-control slideshow-next" ng-click=next()><i class="fa fa-chevron-right"></i></a></div></div><div class=slideshow-nav ng-if="playlist.length > 1"><a ng-click=select(item) ng-repeat="item in playlist.items" ng-class={active:item.active}><i class=fa ng-class="{\'fa-circle-o\':!item.active, \'fa-circle\':item.active}"></i></a></div></div>')}]);